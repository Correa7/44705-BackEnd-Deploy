
    <a  id="{{cart}}" href="#" class="idCart"></a>
    <div class="box-total">
        <a class="btn btn-outline-primary mt-2 ms-2 me-2" href='/api/cart/{{cart}}/purchase'>Purchase</a>
        <h5>Total: $ {{amount}}</h5>
        <h5>Total Items:  {{totalquantity}}</h5> 
    </div>
    <div class="box-table">
        <table class="table table-striped">
            <thead class="">
                <tr class="tr">
                <th scope="col">Thumbnail</th>
                <th scope="col">title</th>
                <th scope="col">Price</th>
                <th scope="col">Quantity</th>
                <th scope="col">Delete</th>
                </tr>
            </thead>
            <tbody>
                {{#each products}}
                <tr class="tr">
                <td><img src="{{this.thumbnail}}"  class="table-img" alt={{this.title}}></td>
                <td><h5 class="table-title">{{this.title}}</h5></td>
                <td><h5>$<strong>{{this.prices}}</strong></h5></td>
                <td><h5>  {{this.quantity}}</h5></td>
                <td><button class="link" onclick="delProduct('{{this.id}}')"><img class="trash-icon" src="/images/icons8-trash-48.png" alt="Trach icon"></button></td>
                </tr>
                {{/each}}
            </tbody>
        </table>
    </div>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="/js/cart.js"></script>
<script src="src/js/cart.js">
    function warningDel() {
        Swal.fire({
            position: 'top-end',
            icon: 'error',
            title: 'Product Deleted to cart',
            showConfirmButton: false,
            timer: 1000
        })
    }

    const cart = document.querySelector(".idCart");
    let idcart = cart.id 

    console.log(idcart) 
    async function delProduct(id){
        console.log('product id : ' + id)
        const url =`http://44705-backend-deploy-production.up.railway.app/api/cart/${idcart}/product/${id}`
        
        const options = {
            method: "DELETE",
            headers:{
                "Content-Type":"application/json",
            }
        }
        fetch(url, options)
        .then((response)=> response.json())
        .then(()=>{
            warningDel()
            setTimeout(() => {
                location.reload();
            }, 1000);
        })
        .catch((error)=>{
            console.error("Error:", error)
        })
    }
 


</script>

